{
  "author": {
    "name": "Brian Link",
    "email": "cpsubrian@gmail.com"
  },
  "name": "hardhat",
  "description": "Scaffolding utility for blue-collar programmers.",
  "keywords": [
    "scaffold",
    "cli",
    "copy",
    "file",
    "directory",
    "directories"
  ],
  "version": "0.0.7",
  "homepage": "http://cantina.github.com",
  "repository": {
    "type": "git",
    "url": "git://github.com/cpsubrian/hardhat.git"
  },
  "main": "./lib/hardhat.js",
  "scripts": {
    "test": "make test"
  },
  "dependencies": {
    "consolidate": "~0.3.0",
    "dive": "~0.2.0",
    "mkdirp": "~0.3.2",
    "fs-extra": "~0.1.0",
    "async": "~0.1.18"
  },
  "devDependencies": {
    "mocha": "~1.0.3",
    "rimraf": "~2.0.1",
    "handlebars": "~1.0.5",
    "jade": "~0.26.0"
  },
  "optionalDependencies": {},
  "engines": {
    "node": ">= 0.8.0"
  },
  "readme": "HardHat\n=======\n\n**Scaffolding utility for blue-collar programmers.**\n\n[![Build Status](https://secure.travis-ci.org/cantina/hardhat.png)](http://travis-ci.org/cantina/hardhat)\n\nAbout / Why?\n------------\nThere are a [few](http://search.npmjs.org/#/scaffold) [other](http://search.npmjs.org/#/scaffolder)\n[scaffolding](http://search.npmjs.org/#/scaffoldit) libraries out there, some more recently\nupdated than others.  One thing most of them share in common is that they all do\na little too much. I don't need option parsing, I can use [optimist](https://github.com/substack/node-optimist).\nI don't need a command prompt library, [prompt](https://github.com/flatiron/prompt)\nalready takes care of that. I don't need cli routing, I'm happy to use\n[flatiron](https://github.com/flatiron/flatiron)/[director](https://github.com/flatiron/director).\n\nHardHat aims to solve specific problems and be another tool in your overall\ncommand-line application.\n\n\nFeatures\n--------\n\n  * `scaffold()`: Copy a directory of scaffold folders & files (templates) to a\n    new destination.\n      * Your templates can be written using any engine that [consolidate](https://github.com/visionmedia/consolidate.js) supports\n        (currently 14 engines including jade, handlebars, etc.)\n  * More?  Pull requests welcome :)\n\n\nInstallation\n------------\n### Install via npm (node package manager) ###\n```\n$ [sudo] npm install hardhat\n```\n\nUsage\n------\n\n### hardhat.scaffold ###\n\nThe scaffold() method copies files and directories from one location to\nanother, optionally applying template data to them.\n\nThe templating is powered by [consolidate](https://github.com/visionmedia/consolidate.js), so\nyou can use any of its supported engines (jade, handlebars, ejs, etc.).\n\n```js\nvar hardhat = require('hardhat');\n\nhardhat.scaffold(<srcDir>, <destDir>, options, function(err) {\n  // All done!\n});\n```\n\nThe available options (and their defaults) are:\n\n```js\nvar options = {\n  engine: 'handlebars', // The consolidate-supported template engine to use.\n  ext: 'tpl', // The extension prefix to trigger templating (see below).\n  encoding: 'utf8', // The file encoding for templates (non templates can be any encoding).\n  data: {} // Template data to pass to the engine.\n};\n```\n\nIn order to trigger templating on your source files, you shoud add an extension\nprefix matching the options passed or the default.  So for example, if your\nsource file is `index.html` but you want templating to be applied, you should\nname it `index.tpl.html`.  Scaffold will apply the templating and write the\nfile to the destination as `index.html`, stripping the extension prefix.\n\nIf you are happy with the default options and do not have any template data to\npass, you can omit options from the method call like:\n\n```js\nvar hardhat = require('hardhat');\n\nhardhat.scaffold(<srcDir>, <destDir>, function(err) {\n  // All done and used the default options.\n});\n```\n\nExamples\n---------\nComing Soon\n\n\nRunning Tests\n-------------\nInstall dev dependencies:\n```\n$ [sudo] npm install -d\n```\n\nRun the tests:\n```\n$ make test\n```\n\n\n- - -\n\n### Developed by [Terra Eclipse](http://www.terraeclipse.com)\nTerra Eclipse, Inc. is a nationally recognized political technology and\nstrategy firm located in Aptos, CA and Washington, D.C.\n\n- - -\n\n### License: MIT\nCopyright (C) 2012 Terra Eclipse, Inc. ([http://www.terraeclipse.com](http://www.terraeclipse.com))\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n",
  "_id": "hardhat@0.0.7",
  "dist": {
    "shasum": "f9214fa041ffee6cf932dd1e3f2bbeab4daf8693",
    "tarball": "http://registry.npmjs.org/hardhat/-/hardhat-0.0.7.tgz"
  },
  "maintainers": [
    {
      "name": "cpsubrian",
      "email": "cpsubrian@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "f9214fa041ffee6cf932dd1e3f2bbeab4daf8693",
  "_from": "hardhat@~0.0.7",
  "_resolved": "https://registry.npmjs.org/hardhat/-/hardhat-0.0.7.tgz",
  "bugs": {
    "url": "https://github.com/cpsubrian/hardhat/issues"
  }
}
